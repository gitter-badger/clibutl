
<rule>=$1
---=@end

!!! rule := rulename action? ASSIGN expr ENDRULE ;
rule:<spc><I><spc>\:\=<spc><expr>\;=\
                                    int peg_$2(peginfo \*p) \{\
                                    \n   size_t q \= save(p)\;\
                                    \n   size_t qq \= NULL\;\
                                    \n   int res \= NULL\;\
                                    \n $5\
                                    \s   return fail(p)\;\
                                    \n\}\n

rule:\P---=@terminate


!!!  expr := term (ALT term)* ;
expr:<term>=   do \{\n$1     return success(p)\;\n   \} while(0)\;\n   back(p,q)\;\n\n
expr:\/<spc>=
expr:\;<spc>=@terminate
expr:\P---=@terminate
expr:=@terminate


!!!  term := (seq spc?)+ ;
term:<seq><spc>=$1
term:=@terminate
term:\P---=@terminate

!!!   seq  := ("&" / "!") atom /
!!!           atom ("*" / "?" / "+")? ;
seq:\!<atom>=    if ($1) break\;\n@terminate
seq:&<atom>=    qq \= save(p)\; if (\!$1) break\; else back(p,qq)\;\n@terminate
seq:<atom><opt>=@sqa{$2$1}    if (\!res) break\;\n@terminate
seq:=@terminate


atom:"<str>"=peg__string(p,"$1")@terminate
atom:\[<cls>\]=peg__class(p,"$1")@terminate
atom:<I>=peg_$1(p)@terminate
atom:\/=@terminate
atom:(<expr>)=$1@terminate
atom:=@terminate

opt:\*=S@end
opt:\+=P@end
opt:\?=Q1@end
opt:=N@end

sqa:N*=  res\=*\;\n@terminate
sqa:Q*=  res\=*\; res++\;\n@terminate
sqa:S*=  for(res=1\;*\;res++)\;\n@terminate
sqa:P*=  for(res=0\;*\;res++)\;\n@terminate


str:\\"=\\"
str:\\'=\\'
cls:\\]=]

spc:<S>=
spc:\#*\r\n=
spc:\#*\r=
spc:\#*\n=
spc:=@end
